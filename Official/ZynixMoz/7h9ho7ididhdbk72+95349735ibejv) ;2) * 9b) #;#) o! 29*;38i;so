-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer

-- Notification
game.StarterGui:SetCore("SendNotification", {
    Title = "Executed Successfully!";
    Text = "Made by ZYNIXMOZ";
    Icon = "rbxassetid://110443171187665";
    Duration = 5
})

-- ScreenGui setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZynixClientSizer"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0,300,0,180)
frame.Position = UDim2.new(0.5,-150,0.5,-90)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0,15)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0,30)
title.Position = UDim2.new(0,0,0,0)
title.Text = "ZynixClient Sizer"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.FredokaOne
title.TextScaled = true
title.BackgroundColor3 = Color3.fromRGB(60,60,60)
title.Parent = frame
Instance.new("UICorner", title).CornerRadius = UDim.new(0,15)

-- Floor label
local floorLabel = Instance.new("TextLabel")
floorLabel.Size = UDim2.new(1,-20,0,25)
floorLabel.Position = UDim2.new(0,10,0,35)
floorLabel.BackgroundColor3 = Color3.fromRGB(50,50,50)
floorLabel.TextColor3 = Color3.fromRGB(255,255,255)
floorLabel.Text = "Current Floor: None"
floorLabel.Font = Enum.Font.FredokaOne
floorLabel.TextScaled = true
floorLabel.Parent = frame
Instance.new("UICorner", floorLabel).CornerRadius = UDim.new(0,10)

-- Horizontal slider
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(1,-40,0,30)
sliderFrame.Position = UDim2.new(0,20,0,70)
sliderFrame.BackgroundColor3 = Color3.fromRGB(80,80,80)
sliderFrame.BorderSizePixel = 0
sliderFrame.Parent = frame
Instance.new("UICorner", sliderFrame).CornerRadius = UDim.new(0,10)

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(1,-20,0,10)
sliderBar.Position = UDim2.new(0,10,0.5,-5)
sliderBar.BackgroundColor3 = Color3.fromRGB(120,120,120)
sliderBar.Parent = sliderFrame

local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(0,20,0,20)
sliderButton.Position = UDim2.new(0,0,0.5,-10)
sliderButton.Text = ""
sliderButton.BackgroundColor3 = Color3.fromRGB(220,220,220)
sliderButton.BorderSizePixel = 0
sliderButton.Parent = sliderFrame
Instance.new("UICorner", sliderButton).CornerRadius = UDim.new(1,0)

-- Manual buttons
local function createButton(text,color,pos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.45,-5,0,30)
    btn.Position = pos
    btn.Text = text
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.BorderSizePixel = 0
    btn.Font = Enum.Font.FredokaOne
    btn.TextScaled = true
    btn.Parent = frame
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,10)
    return btn
end

local addButton = createButton("+", Color3.fromRGB(0,200,0), UDim2.new(0,10,0,110))
local removeButton = createButton("-", Color3.fromRGB(200,0,0), UDim2.new(0.55,0,0,110))

-- Sounds
local clickSound = Instance.new("Sound", frame)
clickSound.SoundId = "rbxassetid://9083627113"
clickSound.Volume = 1
local slideSound = Instance.new("Sound", frame)
slideSound.SoundId = "rbxassetid://6042053626"
slideSound.Volume = 1

-- Minimizer
local miniGui = Instance.new("ScreenGui")
miniGui.Name = "ZynixClientSizer_Minimizer"
miniGui.ResetOnSpawn = false
miniGui.IgnoreGuiInset = true
miniGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0,50,0,50)
toggleButton.Position = UDim2.new(0,10,0,45)
toggleButton.BackgroundColor3 = Color3.fromRGB(30,30,30)
toggleButton.BackgroundTransparency = 0.5
toggleButton.BorderSizePixel = 0
toggleButton.Image = "rbxassetid://84391456254700"
toggleButton.AutoButtonColor = false
toggleButton.ScaleType = Enum.ScaleType.Fit
toggleButton.Parent = miniGui
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0,12)

toggleButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
end)

-- Function to get part under player
local function getFloorPart()
    local character = LocalPlayer.Character
    if not character then return nil end
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return nil end
    local ray = Ray.new(root.Position, Vector3.new(0,-10,0))
    local part, pos = workspace:FindPartOnRay(ray, character)
    return part
end

-- Slider logic
local dragging = false
local sliderValue = 0

local function updateSlider(xPos)
    local barPos = sliderBar.AbsolutePosition.X
    local barSize = sliderBar.AbsoluteSize.X
    local relativeX = math.clamp(xPos - barPos,0,barSize)
    sliderButton.Position = UDim2.new(0,relativeX - sliderButton.AbsoluteSize.X/2,0.5,-sliderButton.AbsoluteSize.Y/2)
    sliderValue = math.floor((relativeX/barSize)*50 + 1)
    
    local part = getFloorPart()
    if part then
        part.Size = Vector3.new(part.Size.X, sliderValue, part.Size.Z)
        floorLabel.Text = "Current Floor: "..part.Name
    else
        floorLabel.Text = "Current Floor: None"
    end
    
    local t = sliderValue/50
    sliderBar.BackgroundColor3 = Color3.fromRGB(255*(1-t),255*t,0)
    slideSound:Play()
end

sliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateSlider(input.Position.X)
    end
end)
sliderBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        updateSlider(input.Position.X)
    end
end)

-- Manual buttons
addButton.MouseButton1Click:Connect(function()
    local part = getFloorPart()
    if part then
        part.Size = Vector3.new(part.Size.X, part.Size.Y+1, part.Size.Z)
        floorLabel.Text = "Current Floor: "..part.Name
        clickSound:Play()
    end
end)
removeButton.MouseButton1Click:Connect(function()
    local part = getFloorPart()
    if part then
        part.Size = Vector3.new(part.Size.X, math.max(part.Size.Y-1,1), part.Size.Z)
        floorLabel.Text = "Current Floor: "..part.Name
        clickSound:Play()
    end
end)

-- Pulsing background animation
local bgColors = {Color3.fromRGB(25,25,25), Color3.fromRGB(35,35,35), Color3.fromRGB(30,30,30)}
local currentIndex = 1
spawn(function()
    while true do
        currentIndex = currentIndex + 1
        if currentIndex > #bgColors then currentIndex = 1 end
        local goal = {BackgroundColor3 = bgColors[currentIndex]}
        TweenService:Create(frame, TweenInfo.new(2,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut), goal):Play()
        wait(2)
    end
end)-- TextBox for step size
local stepBox = Instance.new("TextBox")
stepBox.Size = UDim2.new(0.9,0,0,30)
stepBox.Position = UDim2.new(0.05,0,0,150)
stepBox.PlaceholderText = "Enter step size (default 1)"
stepBox.Text = ""
stepBox.ClearTextOnFocus = false
stepBox.BackgroundColor3 = Color3.fromRGB(60,60,60)
stepBox.TextColor3 = Color3.fromRGB(255,255,255)
stepBox.Font = Enum.Font.FredokaOne
stepBox.TextScaled = true
stepBox.Parent = frame
Instance.new("UICorner", stepBox).CornerRadius = UDim.new(0,10)

-- Update + button
addButton.MouseButton1Click:Connect(function()
    local part = getFloorPart()
    if not part then return end

    local step = tonumber(stepBox.Text) or 1 -- default +1
    part.Size = Vector3.new(part.Size.X, part.Size.Y + step, part.Size.Z)
    floorLabel.Text = "Current Floor: "..part.Name
    clickSound:Play()
end)

-- Update - button
removeButton.MouseButton1Click:Connect(function()
    local part = getFloorPart()
    if not part then return end

    local step = tonumber(stepBox.Text) or 1 -- default -1
    part.Size = Vector3.new(part.Size.X, math.max(part.Size.Y - step, 1), part.Size.Z)
    floorLabel.Text = "Current Floor: "..part.Name
    clickSound:Play()
end)
